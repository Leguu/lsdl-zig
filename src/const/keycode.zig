const lsdl = @import("../lsdl.zig");
const Scancode = lsdl.Scancode;

const mask = 1 << 30;

fn convertScancode(comptime scancode: Scancode) comptime_int {
    return @enumToInt(scancode) | mask;
}

pub const Keycode = enum(i32) {
    UNKNOWN = 0,

    RETURN = '\r',
    ESCAPE = '\x1B',
    BACKSPACE = '\x08',
    TAB = '\t',
    SPACE = ' ',
    EXCLAIM = '!',
    QUOTEDBL = '"',
    HASH = '#',
    PERCENT = '%',
    DOLLAR = '$',
    AMPERSAND = '&',
    QUOTE = '\'',
    LEFTPAREN = '(',
    RIGHTPAREN = ')',
    ASTERISK = '*',
    PLUS = '+',
    COMMA = ',',
    MINUS = '-',
    PERIOD = '.',
    SLASH = '/',
    ZERO = '0',
    ONE = '1',
    TWO = '2',
    THREE = '3',
    FOUR = '4',
    FIVE = '5',
    SIX = '6',
    SEVEN = '7',
    EIGHT = '8',
    NINE = '9',
    COLON = ':',
    SEMICOLON = ';',
    LESS = '<',
    EQUALS = '=',
    GREATER = '>',
    QUESTION = '?',
    AT = '@',

    // Skip uppercase letters
    LEFTBRACKET = '[',
    BACKSLASH = '\\',
    RIGHTBRACKET = ']',
    CARET = '^',
    UNDERSCORE = '_',
    BACKQUOTE = '`',
    a = 'a',
    b = 'b',
    c = 'c',
    d = 'd',
    e = 'e',
    f = 'f',
    g = 'g',
    h = 'h',
    i = 'i',
    j = 'j',
    k = 'k',
    l = 'l',
    m = 'm',
    n = 'n',
    o = 'o',
    p = 'p',
    q = 'q',
    r = 'r',
    s = 's',
    t = 't',
    u = 'u',
    v = 'v',
    w = 'w',
    x = 'x',
    y = 'y',
    z = 'z',

    CAPSLOCK = convertScancode(Scancode.CAPSLOCK),

    F1 = convertScancode(Scancode.F1),
    F2 = convertScancode(Scancode.F2),
    F3 = convertScancode(Scancode.F3),
    F4 = convertScancode(Scancode.F4),
    F5 = convertScancode(Scancode.F5),
    F6 = convertScancode(Scancode.F6),
    F7 = convertScancode(Scancode.F7),
    F8 = convertScancode(Scancode.F8),
    F9 = convertScancode(Scancode.F9),
    F10 = convertScancode(Scancode.F10),
    F11 = convertScancode(Scancode.F11),
    F12 = convertScancode(Scancode.F12),

    PRINTSCREEN = convertScancode(Scancode.PRINTSCREEN),
    SCROLLLOCK = convertScancode(Scancode.SCROLLLOCK),
    PAUSE = convertScancode(Scancode.PAUSE),
    INSERT = convertScancode(Scancode.INSERT),
    HOME = convertScancode(Scancode.HOME),
    PAGEUP = convertScancode(Scancode.PAGEUP),
    DELETE = '\x4F',
    END = convertScancode(Scancode.END),
    PAGEDOWN = convertScancode(Scancode.PAGEDOWN),
    RIGHT = convertScancode(Scancode.RIGHT),
    LEFT = convertScancode(Scancode.LEFT),
    DOWN = convertScancode(Scancode.DOWN),
    UP = convertScancode(Scancode.UP),

    NUMLOCKCLEAR = convertScancode(Scancode.NUMLOCKCLEAR),
    KP_DIVIDE = convertScancode(Scancode.KP_DIVIDE),
    KP_MULTIPLY = convertScancode(Scancode.KP_MULTIPLY),
    KP_MINUS = convertScancode(Scancode.KP_MINUS),
    KP_PLUS = convertScancode(Scancode.KP_PLUS),
    KP_ENTER = convertScancode(Scancode.KP_ENTER),
    KP_1 = convertScancode(Scancode.KP_1),
    KP_2 = convertScancode(Scancode.KP_2),
    KP_3 = convertScancode(Scancode.KP_3),
    KP_4 = convertScancode(Scancode.KP_4),
    KP_5 = convertScancode(Scancode.KP_5),
    KP_6 = convertScancode(Scancode.KP_6),
    KP_7 = convertScancode(Scancode.KP_7),
    KP_8 = convertScancode(Scancode.KP_8),
    KP_9 = convertScancode(Scancode.KP_9),
    KP_0 = convertScancode(Scancode.KP_0),
    KP_PERIOD = convertScancode(Scancode.KP_PERIOD),

    APPLICATION = convertScancode(Scancode.APPLICATION),
    POWER = convertScancode(Scancode.POWER),
    KP_EQUALS = convertScancode(Scancode.KP_EQUALS),
    F13 = convertScancode(Scancode.F13),
    F14 = convertScancode(Scancode.F14),
    F15 = convertScancode(Scancode.F15),
    F16 = convertScancode(Scancode.F16),
    F17 = convertScancode(Scancode.F17),
    F18 = convertScancode(Scancode.F18),
    F19 = convertScancode(Scancode.F19),
    F20 = convertScancode(Scancode.F20),
    F21 = convertScancode(Scancode.F21),
    F22 = convertScancode(Scancode.F22),
    F23 = convertScancode(Scancode.F23),
    F24 = convertScancode(Scancode.F24),
    EXECUTE = convertScancode(Scancode.EXECUTE),
    HELP = convertScancode(Scancode.HELP),
    MENU = convertScancode(Scancode.MENU),
    SELECT = convertScancode(Scancode.SELECT),
    STOP = convertScancode(Scancode.STOP),
    AGAIN = convertScancode(Scancode.AGAIN),
    UNDO = convertScancode(Scancode.UNDO),
    CUT = convertScancode(Scancode.CUT),
    COPY = convertScancode(Scancode.COPY),
    PASTE = convertScancode(Scancode.PASTE),
    FIND = convertScancode(Scancode.FIND),
    MUTE = convertScancode(Scancode.MUTE),
    VOLUMEUP = convertScancode(Scancode.VOLUMEUP),
    VOLUMEDOWN = convertScancode(Scancode.VOLUMEDOWN),
    KP_COMMA = convertScancode(Scancode.KP_COMMA),
    KP_EQUALSAS400 = convertScancode(Scancode.KP_EQUALSAS400),

    ALTERASE = convertScancode(Scancode.ALTERASE),
    SYSREQ = convertScancode(Scancode.SYSREQ),
    CANCEL = convertScancode(Scancode.CANCEL),
    CLEAR = convertScancode(Scancode.CLEAR),
    PRIOR = convertScancode(Scancode.PRIOR),
    RETURN2 = convertScancode(Scancode.RETURN2),
    SEPARATOR = convertScancode(Scancode.SEPARATOR),
    OUT = convertScancode(Scancode.OUT),
    OPER = convertScancode(Scancode.OPER),
    CLEARAGAIN = convertScancode(Scancode.CLEARAGAIN),
    CRSEL = convertScancode(Scancode.CRSEL),
    EXSEL = convertScancode(Scancode.EXSEL),

    KP_00 = convertScancode(Scancode.KP_00),
    KP_000 = convertScancode(Scancode.KP_000),
    THOUSANDSSEPARATOR = convertScancode(Scancode.THOUSANDSSEPARATOR),
    DECIMALSEPARATOR = convertScancode(Scancode.DECIMALSEPARATOR),
    CURRENCYUNIT = convertScancode(Scancode.CURRENCYUNIT),
    CURRENCYSUBUNIT = convertScancode(Scancode.CURRENCYSUBUNIT),
    KP_LEFTPAREN = convertScancode(Scancode.KP_LEFTPAREN),
    KP_RIGHTPAREN = convertScancode(Scancode.KP_RIGHTPAREN),
    KP_LEFTBRACE = convertScancode(Scancode.KP_LEFTBRACE),
    KP_RIGHTBRACE = convertScancode(Scancode.KP_RIGHTBRACE),
    KP_TAB = convertScancode(Scancode.KP_TAB),
    KP_BACKSPACE = convertScancode(Scancode.KP_BACKSPACE),
    KP_A = convertScancode(Scancode.KP_A),
    KP_B = convertScancode(Scancode.KP_B),
    KP_C = convertScancode(Scancode.KP_C),
    KP_D = convertScancode(Scancode.KP_D),
    KP_E = convertScancode(Scancode.KP_E),
    KP_F = convertScancode(Scancode.KP_F),
    KP_XOR = convertScancode(Scancode.KP_XOR),
    KP_POWER = convertScancode(Scancode.KP_POWER),
    KP_PERCENT = convertScancode(Scancode.KP_PERCENT),
    KP_LESS = convertScancode(Scancode.KP_LESS),
    KP_GREATER = convertScancode(Scancode.KP_GREATER),
    KP_AMPERSAND = convertScancode(Scancode.KP_AMPERSAND),
    KP_DBLAMPERSAND = convertScancode(Scancode.KP_DBLAMPERSAND),
    KP_VERTICALBAR = convertScancode(Scancode.KP_VERTICALBAR),
    KP_DBLVERTICALBAR = convertScancode(Scancode.KP_DBLVERTICALBAR),
    KP_COLON = convertScancode(Scancode.KP_COLON),
    KP_HASH = convertScancode(Scancode.KP_HASH),
    KP_SPACE = convertScancode(Scancode.KP_SPACE),
    KP_AT = convertScancode(Scancode.KP_AT),
    KP_EXCLAM = convertScancode(Scancode.KP_EXCLAM),
    KP_MEMSTORE = convertScancode(Scancode.KP_MEMSTORE),
    KP_MEMRECALL = convertScancode(Scancode.KP_MEMRECALL),
    KP_MEMCLEAR = convertScancode(Scancode.KP_MEMCLEAR),
    KP_MEMADD = convertScancode(Scancode.KP_MEMADD),
    KP_MEMSUBTRACT = convertScancode(Scancode.KP_MEMSUBTRACT),
    KP_MEMMULTIPLY = convertScancode(Scancode.KP_MEMMULTIPLY),
    KP_MEMDIVIDE = convertScancode(Scancode.KP_MEMDIVIDE),
    KP_PLUSMINUS = convertScancode(Scancode.KP_PLUSMINUS),
    KP_CLEAR = convertScancode(Scancode.KP_CLEAR),
    KP_CLEARENTRY = convertScancode(Scancode.KP_CLEARENTRY),
    KP_BINARY = convertScancode(Scancode.KP_BINARY),
    KP_OCTAL = convertScancode(Scancode.KP_OCTAL),
    KP_DECIMAL = convertScancode(Scancode.KP_DECIMAL),
    KP_HEXADECIMAL = convertScancode(Scancode.KP_HEXADECIMAL),

    LCTRL = convertScancode(Scancode.LCTRL),
    LSHIFT = convertScancode(Scancode.LSHIFT),
    LALT = convertScancode(Scancode.LALT),
    LGUI = convertScancode(Scancode.LGUI),
    RCTRL = convertScancode(Scancode.RCTRL),
    RSHIFT = convertScancode(Scancode.RSHIFT),
    RALT = convertScancode(Scancode.RALT),
    RGUI = convertScancode(Scancode.RGUI),

    MODE = convertScancode(Scancode.MODE),

    AUDIONEXT = convertScancode(Scancode.AUDIONEXT),
    AUDIOPREV = convertScancode(Scancode.AUDIOPREV),
    AUDIOSTOP = convertScancode(Scancode.AUDIOSTOP),
    AUDIOPLAY = convertScancode(Scancode.AUDIOPLAY),
    AUDIOMUTE = convertScancode(Scancode.AUDIOMUTE),
    MEDIASELECT = convertScancode(Scancode.MEDIASELECT),
    WWW = convertScancode(Scancode.WWW),
    MAIL = convertScancode(Scancode.MAIL),
    CALCULATOR = convertScancode(Scancode.CALCULATOR),
    COMPUTER = convertScancode(Scancode.COMPUTER),
    AC_SEARCH = convertScancode(Scancode.AC_SEARCH),
    AC_HOME = convertScancode(Scancode.AC_HOME),
    AC_BACK = convertScancode(Scancode.AC_BACK),
    AC_FORWARD = convertScancode(Scancode.AC_FORWARD),
    AC_STOP = convertScancode(Scancode.AC_STOP),
    AC_REFRESH = convertScancode(Scancode.AC_REFRESH),
    AC_BOOKMARKS = convertScancode(Scancode.AC_BOOKMARKS),

    BRIGHTNESSDOWN = convertScancode(Scancode.BRIGHTNESSDOWN),
    BRIGHTNESSUP = convertScancode(Scancode.BRIGHTNESSUP),
    DISPLAYSWITCH = convertScancode(Scancode.DISPLAYSWITCH),
    KBDILLUMTOGGLE = convertScancode(Scancode.KBDILLUMTOGGLE),
    KBDILLUMDOWN = convertScancode(Scancode.KBDILLUMDOWN),
    KBDILLUMUP = convertScancode(Scancode.KBDILLUMUP),
    EJECT = convertScancode(Scancode.EJECT),
    SLEEP = convertScancode(Scancode.SLEEP),
    APP1 = convertScancode(Scancode.APP1),
    APP2 = convertScancode(Scancode.APP2),

    AUDIOREWIND = convertScancode(Scancode.AUDIOREWIND),
    AUDIOFASTFORWARD = convertScancode(Scancode.AUDIOFASTFORWARD),
};
